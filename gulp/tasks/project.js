/**
 * main.js
 *
 * This file requires following npm modules:
 * ``
 * npm install gulp gulp-run-sequence gulp-inject --save-dev
 * ``
 *
 * This files bundles several tasks from the tasks folder
 *
 *
 */

'use strict';

var gulp = require('gulp'),
    helper = require('../helper'),
    runSequence = require('gulp-run-sequence');

var config = require('../config.js');

//////////////////

gulp.task('project:init', function (done) {
    return runSequence('images:copy', 'project:compile', done);
});

//For environment specific compilations prefix you command with $NODE_ENV="[EnvName]"
// ```
// $NODE_ENV='staging' gulp project:compile
// ```
gulp.task('project:compile', ['project:copy'], function (done) {

    return runSequence( 'env:compile','env:inject',
                        'html:copy',
                        'css:compile', 'css:inject',
                        'bower:inject',
                        'ts:compile','script:inject', done);
});

/*
gulp.task('project:optimize', function (done) {
    return runSequence('css:compile-optimize', 'css:inject-optimize', 'templatecache:compile', 'templatecache:inject', done);
});

gulp.task('project:build', function (done) {
    return runSequence('project:compile', 'project:optimize', 'build:compile', done);
});
*/
gulp.task('project:watch',['ts:watch','css:watch','html:watch'], function(done) {
    return done();
});


//clean all but lib folder in www
gulp.task('project:clean', function (done) {
    helper.log('delete all autogenerated files');
    return helper.clean([config.buildFolder + '**/*', '!' + config.buildFolder + 'lib/**'], done);
});

gulp.task('project:copy', function (done) {
    return gulp.src(['./src/index.html'])
        .pipe(gulp.dest('./www'), done);
});
